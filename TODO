TODO
- optimize entire function + remove unused memory (5%)
- circular array (1%)
- right rotate (large%)
- other optimizations: dce, instr fetch, first order funcs
- hash->list core 18: issue with different racket versions (i think)
- no need to use lock in cache.rkt
- why compiling md5 is so slow
- modify the language to aid synthesis-based compiler

FASTER PARTITIONER
- infer each function first (see issue about racket)

ISSUE ABOUT RACKET
- incremental solving not working
- branch debug

MEMO
- same VarDecl => same sym-place!!!

BENCHMARKS
* faster sqrt
- matrix multiply
- insertion sort
- mergesort (function, recursion)
- disparity
- transpose
- DP (activity scheduling)
- fibonacci 
- shortest path
- MST
- DFS, BFS
- heap
- blackscholes (float, log, exp)
- FFT
