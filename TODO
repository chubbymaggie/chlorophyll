TODO
- md5: still buggy
- redundant temp for funccall
- optimize md5, run optimized md5 on IDE
- generate node 900 & 902
- merge block after define-repeating-seq
- md5: 998, 1002, 1006 + repeat more
- connect to rohin's interpreter
  = left, right, up, down
  = 0 , 0 , 0 ,
- or tikhon's
  = word for starting to execute

- kill z3 when user break happens
- longest subsequence
- nop is less than everything, @ < @+
- stat report
- 3 a! @ 32 - 1 . + . + 0 . + a! @
  = implement an abstract interpreter to just figure how many send and recv we need
  = no need to generate first pair from the interpreter

- reset rosette when solving new problem (see compiler.rkt)
- known type interpreter
  = for-array2-error.cll should have compile error: other variable (e.g. i) can't be at the same place ast clustered array

- dependency analysis to do parallel loop
- data type check (x[i] + y) when y is array
- visitor-divider can't handle nested indexes (eg. +@place(x[i*n+j]))

- refactoring interpretor & flow & comminsert
- master/slave block,function,array (tests/for-array2)

- topological sort
- recursion
- general for?
- for-array-fancy.cll
- @h inside for (x[i] +@h y[i])
- do we have to support int@any x?
  might need one more pass to get inferred place (e.g. @any)
- check if printing for @any make sense
- really need to be careful about for/parfor
  need better data dependency analysis (prefixsum, convolution)
- space estimator: if local var inside a loop -> no space required
- annotation that says split array into x chunks without specify the partitions.
   int[]@{split=4} x; 
- should we allow a == b? Right now, no.
   int[]@{[0:30]=a,[30:50]=b}

ISSUE ABOUT RACKET
- branch master
- email emina about smaller example
- after the error is gone, do perf test again (partial vs no partial)

SYMBOLIC DICT
- symbolic set or lower space to 4
  vector v of set s
  (vector-ref v i) -> (ite cond (set *) (set * /))
  (set-add (vector-ref v i) %) => ERROR

MINI-PROJECTS
- optimization: SSE, dead code elimiation

MEMO
- same VarDecl => same sym-place!!!

BENCHMARKS
- insertion sort
- add
- md5 (RUNNING: no partial, RUN: partial)
- matrix multiply (2D?)

RUN
- 1D convolution (better analysis)
- prefixsum (better analysis)
- ssd (multiple copies) in laptop?

future
- blackscholes (float, log, exp)
- mergesort (function, recursion)
- FFT
