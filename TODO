TODO
- funcinfo for 1rep => arrayforth-def.rkt::L137
- test reg on fir again.
- collect 
  = # of live items in stack and return stack 
  = # of recv
  = assumption for a! b! ?

- rethink key for cache (no mem-size, etc.)
- other optimizations: dce, instr fetch, first order funcs
- no need to use lock in cache.rkt
- why compiling md5 is so slow

FASTER PARTITIONER
- infer each function first (see issue about racket)

ISSUE ABOUT RACKET
- incremental solving not working
- branch debug

MEMO
- same VarDecl => same sym-place!!!

BENCHMARKS
* faster sqrt
- matrix multiply
- insertion sort
- mergesort (function, recursion)
- disparity
- transpose
- DP (activity scheduling)
- fibonacci 
- shortest path
- MST
- DFS, BFS
- heap
- blackscholes (float, log, exp)
- FFT
