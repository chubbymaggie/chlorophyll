int::2@(17,17) leftrotate(int::2@(17,17) x, int@6 r) {
  // haven't handle the case that r > 16  
  int::2@(17,17) out;
  out::0 = (x::1 >>@17 (16 -@6 r)) |@17 (x::0 <<@17 r);
  out::1 = (x::1 <<@17 r) |@17 (x::0 >>@17 (16 -@17 r));
  return out;
}

int::2@(0,1) csum(int::2@(0,1) x, int::2@(0,1) y) {
  int::2@(0,1) z;
  z::0 = x::0 +@0 y::0;
  z::1 = x::1 +@1 y::1 +@1 (z::0 <<@0 16);
  return z;
}


int::2@(0,1) sumrotate(int::2@(0,1) a, int::2@(0,1) b, int::2@(0,1) f, int::2@(2,3) k, int@4 m0, int@5 m1, int@6 r) {
  int::2@(4,5) m;
  m::0 = m0;
  m::1 = m1;
  return csum(b, leftrotate(csum(a +@(0,1) f +@(0,1) k, m), r));
}

void main() {
  int::2[]@({[0:32]=2,[32:64]=12},{[0:32]=3,[32:64]=13}) k[64]; // full = 64 entries
  int[]@{[0:32]=6,[32:64]=7} r[64];
  
  int::2@(0,1) a, b, c, d, temp;
  int::2[]@({[0:4]=10},{[0:4]=9}) hash[4];
  
  int::2[]@({[0:16]=4},{[0:16]=5}) message[16];
  int::2@(4,5) g;

  for(i from 0 to 64) {
    k::1[i] = in();
    k::0[i] = in();
  }
  
  for(i from 0 to 64) {
    r[i] = in();
  }

  for(i from 0 to 4) {
    hash::1[i] = in();
    hash::0[i] = in();
  }

  for(i from 0 to 16) {
    message::1[i] = in();
    message::0[i] = in();
  }
  
  for(t from 0 to 16) { 
    a = hash[0];
    b = hash[1];
    c = hash[2];
    d = hash[3];
    for(i from 0 to 16) { 
      temp = (b &@(0,1) c) |@(0,1) (~@(0,1) b &@(0,1) d);
      temp = sumrotate(a,b,temp,k[i],message::0[i],message::1[i],r[i]);
      a = d;
      d = c;
      c = b;
      b = temp;
    }
    g = 1;
    for(i from 16 to 32) { 
      temp = (d &@(0,1) b) |@(0,1) (~@(0,1) d &@(0,1) c);
      temp = sumrotate(a,b,temp,k[i],message::0[g::0],message::1[g::1],r[i]);
      a = d;
      d = c;
      c = b;
      b = temp;
      g::0 = g::0 +@4 5 &@4 15;
      g::1 = g::1 +@5 5 &@5 15;
      
    }
    g = 5;
    for(i from 32 to 48) { 
      temp = b ^@(0,1) c ^@(0,1) d;
      temp = sumrotate(a,b,temp,k[i],message::0[g::0],message::1[g::1],r[i]);
      a = d;
      d = c;
      c = b;
      b = temp;
      g::0 = g::0 +@4 3 &@4 15;
      g::1 = g::1 +@5 3 &@5 15;
    }
    g = 0;
    for(i from 48 to 64) { 
      temp = c ^@(0,1) (b |@(0,1) ~@(0,1) d);
      temp = sumrotate(a,b,temp,k[i],message::0[g::0],message::1[g::1],r[i]);
      a = d;
      d = c;
      c = b;
      b = temp;
      g::0 = g::0 +@4 7 &@4 15;
      g::1 = g::1 +@5 7 &@5 15;
    }
    hash[0] = hash[0] +@(10,9) a;
    hash[1] = hash[1] +@(10,9) b;
    hash[2] = hash[2] +@(10,9) c;
    hash[3] = hash[3] +@(10,9) d;
  } 

  for(i from 0 to 4) {
    out(hash::1[i]);
    out(hash::0[i]);
  }
}

/*
core = 0, space = 289, ops = #<set:>
core = 1, space = 285, ops = #<set:>
core = 2, space = 326, ops = #<set:>
core = 3, space = 326, ops = #<set:>
core = 4, space = 260, ops = #<set:>
core = 5, space = 260, ops = #<set:>
core = 6, space = 373, ops = #<set:>
core = 7, space = 266, ops = #<set:>
core = 8, space = 0, ops = #<set:>
core = 9, space = 224, ops = #<set:>
core = 10, space = 224, ops = #<set:>
core = 11, space = 0, ops = #<set:>
core = 12, space = 266, ops = #<set:>
core = 13, space = 266, ops = #<set:>
core = 14, space = 0, ops = #<set:>
core = 15, space = 0, ops = #<set:>
core = 16, space = 0, ops = #<set:>
core = 17, space = 209, ops = #<set:>
core = 18, space = 0, ops = #<set:>
core = 19, space = 0, ops = #<set:>
*/
