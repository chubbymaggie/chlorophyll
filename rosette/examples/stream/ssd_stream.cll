#define N 40
#define K 16
#define W 3

class SSD: Filter {
  
  int[] l[W*N];
  int[] r[W*N];
  int row;

  void init() {
    setInput(int);
    setOutput(int);
    setPop(2*N);
    setPush(N-K-W+1);
    row = 0;
  }
  
  void main() {
    // N (width) = 40, M (height) = 3
    // W = 1, K = 16
    /* int N, M; */
    /* N = 40; */
    
    for(i from 0 to W) {
      l[row][i] = input.pop();
    }
    for(i from 0 to W) {
      l[row][i] = input.pop();
    }

    row = row + 1;
    if(row > W) {
      row = 0;
    }

    //for(int n = K + W/2; n < N - W/2; n++) { // column
    for(n from 17 to 39) {
      int min;
      min = 100000;
      int index;
      index = -1;
      
      //for(int k = 0; k < K; k++) {
      for(k from 0 to 16) {
        int sum;
        sum = 0;
        //for(int i = m - W/2; i <= m + W/2; i++) { // row
        int i;
        i = m - 1;
        while(i <= m + 1) {
          //for(int j = n - W/2; j <= n + W/2; j++) { // column
          int j;
          j = n - 1;
          while(j <= n + 1) {
            if(j - k >= 0) {
              sum = (l[i*N + j] - r[i*N + j-k]) * (l[i*N + j] - r[i*N + j-k]) + sum;
              if(min > sum) {
                  min = sum;
                  index = k;
              }
            }
          }
        }
      }
      output.push(index);
    }
  }

}

SSD task = new SSD();
task.run();
