void main() {
  int[]@{[0:36]} A[36];
  int[]@{[0:36]} B[36];
  int[]@{[0:36]} C[36];
  int sum;

  for(i from 0 to 6) {
    for(j from 0 to 6) {
      sum = 0;  
      for(k from 0 to 6) {
	      sum = sum + A[6*i+k] * B[6*k+j];
      }
      C[6*i + j] = sum;
    }
  }

}

/* woonsen

=== Final Solution ===
void main() {
  int[]@{[0:36]=18} A[36];
  int[]@{[0:36]=18} B[36];
  int[]@{[0:36]=11} C[36];
  int@18 sum;
  for(i from 0 to 6)@any {
    for(j from 0 to 6)@any {
      sum = 0;
      for(k from 0 to 6)@any {
        sum = (sum +@18 (A[((6 *@18 i) +@18 k)] *@18 B[((6 *@18 k) +@18 j)]));
      }

      C[((6 *@11 i) +@11 j)] = sum;
    }

  }

}

core = 0, space = 0, ops = #<set:>
core = 1, space = 0, ops = #<set:>
core = 2, space = 0, ops = #<set:>
core = 3, space = 0, ops = #<set:>
core = 4, space = 0, ops = #<set:>
core = 5, space = 0, ops = #<set:>
core = 6, space = 0, ops = #<set:>
core = 7, space = 0, ops = #<set:>
core = 8, space = 0, ops = #<set:>
core = 9, space = 0, ops = #<set:>
core = 10, space = 0, ops = #<set:>
core = 11, space = 201, ops = #<set:>
core = 12, space = 0, ops = #<set:>
core = 13, space = 0, ops = #<set:>
core = 14, space = 0, ops = #<set:>
core = 15, space = 0, ops = #<set:>
core = 16, space = 0, ops = #<set:>
core = 17, space = 0, ops = #<set:>
core = 18, space = 397, ops = #<set:>
core = 19, space = 0, ops = #<set:>
36
partitioning time = 24
*/
