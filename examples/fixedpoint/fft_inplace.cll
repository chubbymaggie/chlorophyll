# 0 --> 000
# 1 --> 001
# 2 --> 002
# 3 --> 003
# 4 --> 004
# 5 --> 005
# 6 --> 006
# 7 --> 007
# 8 --> 300
# 9 --> 301
# 10 --> 302
# 11 --> 303
# 12 --> 304
# 13 --> 305
# 14 --> 306
# 15 --> 307
noroute@{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}

fix3_t@0 blra(fix3_t@0 current_real, fix3_t@0 lower_real, fix3_t@0 lower_imag, fix3_t@0 twiddle_real, fix3_t@0 twiddle_imag) {
  fix3_t@0 tmp_real;
  fix3_t@0 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real - tmp_real;
  return ret_val;
}

fix3_t@1 blia(fix3_t@1 current_imag, fix3_t@1 lower_real, fix3_t@1 lower_imag, fix3_t@1 twiddle_real, fix3_t@1 twiddle_imag) {
  fix3_t@1 tmp_imag;
  fix3_t@1 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag - tmp_imag;
  return ret_val;
}

fix3_t@2 blrb(fix3_t@2 current_real, fix3_t@2 lower_real, fix3_t@2 lower_imag, fix3_t@2 twiddle_real, fix3_t@2 twiddle_imag) {
  fix3_t@2 tmp_real;
  fix3_t@2 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real - tmp_real;
  return ret_val;
}

fix3_t@3 blib(fix3_t@3 current_imag, fix3_t@3 lower_real, fix3_t@3 lower_imag, fix3_t@3 twiddle_real, fix3_t@3 twiddle_imag) {
  fix3_t@3 tmp_imag;
  fix3_t@3 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag - tmp_imag;
  return ret_val;
}


fix3_t@4 blrc(fix3_t@4 current_real, fix3_t@4 lower_real, fix3_t@4 lower_imag, fix3_t@4 twiddle_real, fix3_t@4 twiddle_imag) {
  fix3_t@4 tmp_real;
  fix3_t@4 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real - tmp_real;
  return ret_val;
}

fix3_t@5 blic(fix3_t@5 current_imag, fix3_t@5 lower_real, fix3_t@5 lower_imag, fix3_t@5 twiddle_real, fix3_t@5 twiddle_imag) {
  fix3_t@5 tmp_imag;
  fix3_t@5 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag - tmp_imag;
  return ret_val;
}

fix3_t@6 blrd(fix3_t@6 current_real, fix3_t@6 lower_real, fix3_t@6 lower_imag, fix3_t@6 twiddle_real, fix3_t@6 twiddle_imag) {
  fix3_t@6 tmp_real;
  fix3_t@6 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real - tmp_real;
  return ret_val;
}

fix3_t@7 blid(fix3_t@7 current_imag, fix3_t@7 lower_real, fix3_t@7 lower_imag, fix3_t@7 twiddle_real, fix3_t@7 twiddle_imag) {
  fix3_t@7 tmp_imag;
  fix3_t@7 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag - tmp_imag;
  return ret_val;
}

fix3_t@8 bcra(fix3_t@8 current_real, fix3_t@8 lower_real, fix3_t@8 lower_imag, fix3_t@8 twiddle_real, fix3_t@8 twiddle_imag) {
  fix3_t@8 tmp_real;
  fix3_t@8 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real + tmp_real;
  return ret_val;
}

fix3_t@9 bcia(fix3_t@9 current_imag, fix3_t@9 lower_real, fix3_t@9 lower_imag, fix3_t@9 twiddle_real, fix3_t@9 twiddle_imag) {
  fix3_t@9 tmp_imag;
  fix3_t@9 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag + tmp_imag;
  return ret_val;
}


fix3_t@10 bcrb(fix3_t@10 current_real, fix3_t@10 lower_real, fix3_t@10 lower_imag, fix3_t@10 twiddle_real, fix3_t@10 twiddle_imag) {
  fix3_t@10 tmp_real;
  fix3_t@10 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real + tmp_real;
  return ret_val;
}

fix3_t@11 bcib(fix3_t@11 current_imag, fix3_t@11 lower_real, fix3_t@11 lower_imag, fix3_t@11 twiddle_real, fix3_t@11 twiddle_imag) {
  fix3_t@11 tmp_imag;
  fix3_t@11 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag + tmp_imag;
  return ret_val;
}

fix3_t@12 bcrc(fix3_t@12 current_real, fix3_t@12 lower_real, fix3_t@12 lower_imag, fix3_t@12 twiddle_real, fix3_t@12 twiddle_imag) {
  fix3_t@12 tmp_real;
  fix3_t@12 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real + tmp_real;
  return ret_val;
}

fix3_t@13 bcic(fix3_t@13 current_imag, fix3_t@13 lower_real, fix3_t@13 lower_imag, fix3_t@13 twiddle_real, fix3_t@13 twiddle_imag) {
  fix3_t@13 tmp_imag;
  fix3_t@13 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag + tmp_imag;
  return ret_val;
}


fix3_t@14 bcrd(fix3_t@14 current_real, fix3_t@14 lower_real, fix3_t@14 lower_imag, fix3_t@14 twiddle_real, fix3_t@14 twiddle_imag) {
  fix3_t@14 tmp_real;
  fix3_t@14 ret_val;
  tmp_real = lower_real * twiddle_real + lower_imag * twiddle_imag;
  ret_val = current_real + tmp_real;
  return ret_val;
}

fix3_t@15 bcid(fix3_t@15 current_imag, fix3_t@15 lower_real, fix3_t@15 lower_imag, fix3_t@15 twiddle_real, fix3_t@15 twiddle_imag) {
  fix3_t@15 tmp_imag;
  fix3_t@15 ret_val;
  tmp_imag = lower_imag * twiddle_real - lower_real * twiddle_imag;
  ret_val = current_imag + tmp_imag;
  return ret_val;
}


void main() {

  fix3_t@20 xireal0, xireal1, xireal2, xireal3;
  fix3_t@21 xireal4, xireal5, xireal6, xireal7;
  fix3_t@22 xiimag0, xiimag1, xiimag2, xiimag3;
  fix3_t@23 xiimag4, xiimag5, xiimag6, xiimag7;

  fix3_t@8 xoreal0; //bcra
  fix3_t@0 xoreal1; //blra
  fix3_t@10 xoreal2; //bcrb
  fix3_t@2 xoreal3; //blrb
  fix3_t@12 xoreal4; //bcrc
  fix3_t@4 xoreal5; //blrc
  fix3_t@14 xoreal6; //bcrd
  fix3_t@6 xoreal7; //blrd

  fix3_t@9 xoimag0; //bcia
  fix3_t@1 xoimag1; //blia
  fix3_t@11 xoimag2; //bcib
  fix3_t@3 xoimag3; //blib
  fix3_t@13 xoimag4; //bcic
  fix3_t@5 xoimag5; //blic
  fix3_t@15 xoimag6; //bcid
  fix3_t@7 xoimag7; //blid

  fix3_t@30 cosa[3] = {1.0, 1.0, 1.0};
  fix3_t@30 cosb[3] = {1.0, 1.0, 0.7071};
  fix3_t@31 cosc[3] = {1.0, 0.0, 0.0};
  fix3_t@31 cosd[3] = {1.0, 0.0, -0.7071};

  fix3_t@32 sina[3] = {0.0, 0.0, 0.0};
  fix3_t@32 sinb[3] = {0.0, 0.0, 0.7071};
  fix3_t@33 sinc[3] = {0.0, 1.0, 1.0};
  fix3_t@33 sind[3] = {0.0, 1.0, 0.7071};

// inputs are in normal order, real followed by imaginary
// read in to put inputs in bit reversed order
  xireal0 = 11583;
  xiimag0 = 0;
  xireal4 = 11583;
  xiimag4 = 0;
  xireal2 = 21181;
  xiimag2 = 0;
  xireal6 = -44351;
  xiimag6 = 0;
  xireal1 = 11583;
  xiimag1 = 0;
  xireal5 = -34757;
  xiimag5 = 0;
  xireal3 = 34757;
  xiimag3 = 0;
  xireal7 = -11583;
  xiimag7 = 0;

  for(i from 0 to 3) {

  xoreal0 = bcra(xireal0,xireal1,xiimag1,cosa[i],sina[i]);
  xoimag0 = bcia(xiimag0,xireal1,xiimag1,cosa[i],sina[i]);
  xoreal1 = blra(xireal0,xireal1,xiimag1,cosa[i],sina[i]);
  xoimag1 = blia(xiimag0,xireal1,xiimag1,cosa[i],sina[i]);
  xoreal2 = bcrb(xireal2,xireal3,xiimag3,cosb[i],sinb[i]);
  xoimag2 = bcib(xiimag2,xireal3,xiimag3,cosb[i],sinb[i]);
  xoreal3 = blrb(xireal2,xireal3,xiimag3,cosb[i],sinb[i]);
  xoimag3 = blib(xiimag2,xireal3,xiimag3,cosb[i],sinb[i]);
  xoreal4 = bcrc(xireal4,xireal5,xiimag5,cosc[i],sinc[i]);
  xoimag4 = bcic(xiimag4,xireal5,xiimag5,cosc[i],sinc[i]);
  xoreal5 = blrc(xireal4,xireal5,xiimag5,cosc[i],sinc[i]);
  xoimag5 = blic(xiimag4,xireal5,xiimag5,cosc[i],sinc[i]);
  xoreal6 = bcrd(xireal6,xireal7,xiimag7,cosd[i],sind[i]);
  xoimag6 = bcid(xiimag6,xireal7,xiimag7,cosd[i],sind[i]);
  xoreal7 = blrd(xireal6,xireal7,xiimag7,cosd[i],sind[i]);
  xoimag7 = blid(xiimag6,xireal7,xiimag7,cosd[i],sind[i]);
  
  xireal0 = xoreal0;
  xireal1 = xoreal2;
  xireal2 = xoreal4;
  xireal3 = xoreal6;
  xireal4 = xoreal1;
  xireal5 = xoreal3;
  xireal6 = xoreal5;
  xireal7 = xoreal7;
  xiimag0 = xoimag0;
  xiimag1 = xoimag2;
  xiimag2 = xoimag4;
  xiimag3 = xoimag6;
  xiimag4 = xoimag1;
  xiimag5 = xoimag3;
  xiimag6 = xoimag5;
  xiimag7 = xoimag7;

  }
}
