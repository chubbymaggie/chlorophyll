void leftrotate(int x, int r) {
  return (x <<@place(x) r) ||@place(x) (x >>@place(x) (32 -@place(r) r));
}

int func_f(int b, int c, int d) {
  return (b &&@place(b) c) ||@place(b) (!@place(b) b &&@place(b) d);
}

/*
int func_g(int b, int c, int d) {
  return (d && b) || (!d && c);
}

int func_h(int b, int c, int d) {
  return b ^ c ^ d;
}

int func_i(int b, int c, int d) {
  return c ^ (b || !d);
}
*/
int sumrotate(int a, int b, int f, int k, int m, int r) {
  return b +@place(b) leftrotate(a +@place(a) f +@place(a) k +@place(a) m, r);
}

void main() {
  int[] k[64]; // full = 64 entries
  int[] r[64];
  int[] message[16];
  
  int[] hash[4];
  int a, b, c, d, temp;
  int g;
  
  for(t from 0 to 16) {
    a = hash[0];
    b = hash[1];
    c = hash[2];
    d = hash[3];
    
    for(i from 0 to 64) {
      temp = sumrotate(a,b,func_f(b,c,d),k[i],message[g],r[i]);
    }
    
    hash[0] = hash[0] +@place(hash) a;
    hash[1] = hash[1] +@place(hash) b;
    hash[2] = hash[2] +@place(hash) c;
    hash[3] = hash[3] +@place(hash) d;
  }
}

/*
no partial 
complete placement for operators
# msgs = 2304
time: 631 sec
*/
