// -*- c -*-

# 15 --> 201 // s
# 25 --> 202 // f
# 23 --> 101 // S*A
# 17 --> 100 // a
# 22 --> 200 // a

# 7  --> 003 // b1
# 5  --> 002 // b2
# 6  --> 001 // b3
# 27 --> 000 // b3
# 8  --> 103 // B

# 14 --> 104 // pi
# 24 --> 102 // ord, temp
# 18 --> 301 // proc_out
# 30 --> 204 // proc_input

# 13 --> 505 // main
//filter
# 11 --> 506 
# 10 --> 507
# 12 --> 508
# 9  --> 509
// derive group
# 0 --> 205
# 1 --> 305
# 2 --> 206
# 3 --> 105


fix9_t@{[0:14]=1} quantizerMap_x[14] = {0.6089285714285716, 0.4456, -0.005522388059701492, -0.5247058823529412, -0.6089285714285716, -0.43057752211538003, 0.0, 0.43057752211537986, 0.0, 0.0606060606060606, -0.004000000000000002, 0.0, 0.0, 0.0};

fix9_t@{[0:14]=2} quantizerMap_y[14] = {0.0, -0.0388, 0.06298507462686567, 0.04205882352941177, 0.0, 0.0, 0.0, 0.0, 0.6089285714285716, 0.5839393939393939, -0.45666666666666683, -0.6089285714285716, -0.43057752211538003, 0.43057752211537986};

fix9_t@{[0:14]=3} quantizerMap_z[14] = {0.0, 1.0656000000000003, 1.0932835820895521, 1.0494117647058823, 0.0, -0.4305775221153799, -0.6089285714285716, -0.43057752211538003, 0.0, 1.0596969696969696, 1.0603333333333333, 0.0, -0.4305775221153799, -0.43057752211538003};

fix1_t@7 b1[28] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008859178968279927, 0.06337272277022189, 0.10081502899113409, 0.190554298334544, 0.22032909877299647, 0.2370988137715611, 0.2097131320920997, 0.14607842539395638, 0.5603923308965947, 0.3142587815857528, 0.34486013894787854, 0.39081037984319505, 0.3543683229123401, 0.3157618900717937, 0.2965166106298148, 0.23025820464257024, 0.01124260662740251, 0.06222603794761761, 0.08382834908166671, 0.12795343040443916};

fix1_t@5 b2[28] = {0.12741825147935948, 0.1212691121684889, 0.12554197919735355, 0.3059734551862537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};

fix1_t@6 b3[28] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2599220302035544, 0.1556910845378583, 0.12313404356036413, 0.06659538052461882, 0.0933869176224795, 0.14087393754320937, 0.20143930974808552, 0.23429391543697548, 0.15958385330416844, 0.40445137315854923, 0.34736243941895684, 0.2240865108932028};

fix1_t@27 b4[28] = {0.20449740921282433, 0.1849962464449471, 0.16678896833264634, 0.08339599934024407, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};

fix1_t@17 a1[24] = {
0.3333333333333333, 0.3333333333333333, 0.3333333333333334, 0.0, 0.0, 0.0, 0.0, 0.0, 
0.0, 0.33333333333333326, 0.3333333333333333, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 
0.0, 0.0, 0.3333333333333334, 0.3333333333333334, 0.3333333333333335, 0.0, 0.0, 0.0};

fix1_t@22 a2[40] = {
0.0, 0.0, 0.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 
0.0, 0.0, 0.0, 0.0, 0.3333333333333332, 0.3333333333333332, 0.3333333333333333, 0.0, 
0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.3333333333333335, 0.3333333333333335, 
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.99999};

fix1_t@14 pi[8] = {0.99999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
fix1_t@25 f[8];
fix1_t@15 s[8]; //fix1_t@20 s[8];
int@24 started;


actor* get_b4;
fix1_t@6 get_b4(int@27 i) {
  return b4[i -@27 84];
}

actor* get_b3;
fix1_t@5 get_b3(int@6 i) {
  fix1_t@6 ret;
  if(i <@6 84) {
    ret = b3[i -@6 56];
  } else {
    ret = get_b4(i);
  }
  return ret;
}

actor* get_b2;
fix1_t@7 get_b2(int@5 i) {
  fix1_t@5 ret;
  if(i <@5 56) {
    ret = b2[i -@5 28];
  } else {
    ret = get_b3(i);
  }
  return ret;
}

actor* get_b;
fix1_t@8 get_b(int@7 i) {
  fix1_t@7 ret;
  if(i <@7 28) {
    ret = b1[i];
  } else {
    ret = get_b2(i);
  }
  return ret;

}

actor* get_a2;
fix1_t@17 get_a2(int@22 i) {
  return a2[i -@22 24];
}

actor* get_a;
fix1_t@23 get_a(int@17 i) {
  fix1_t@17 ret;
  if(i <@17 24) {
    ret = a1[i];
  } else {
    ret = get_a2(i);
  }
  return ret;
}

actor* forward_proc_inc;
int@30 forward_proc_inc(int@8 o){
  fix1_t@23 sum;
  fix1_t@24 ord;
  fix1_t@24 temp;
  fix1_t xxx;
  ord = 0;
  //if(started <@8 0) {
  if(started <@15 0) {
    for (k from 0 to 8) {
      sum = 0;
      for (l from 0 to 8) {
        sum = sum +@23 s[l] *@23 get_a((l <<@23 3) +@23 k);
      }
      temp = sum *@24 get_b((o <<@8 3) +@8 k);
      f[k] = temp;
      ord = ord |@24 temp;
    }
  }else{
    started = -1;
    for (l from 0 to 8) {
      f[l] = pi[l] *@8 get_b((o <<@8 3) +@8 l);
    }
    ord = -1;
  }
  return ord;
}

actor* derive_group;
int@30 derive_group(fix9_t::3@(0,0,0) acc){
  fix9_t@1 x;
  fix9_t@2 y;
  fix9_t@3 z;
  x = acc::0;
  y = acc::1;
  z = acc::2;

  fix9_t@0 minDist; minDist = 255;//0b11111111;
  int@0 minGroup;
  //int@4 ret;

  fix9_t@0 dx;
  fix9_t@0 dy;
  fix9_t@0 dz;
  fix9_t@0 d;

  for (i from 0 to 14){
    dx = (quantizerMap_x[i] -@1 x) **2@1;
    dy = (quantizerMap_y[i] -@2 y) **2@2;
    dz = (quantizerMap_z[i] -@3 z) **2@3;

    //dx = calc_dx(i, acc::0);
    //dy = calc_dy(i, acc::1);
    //dz = calc_dz(i, acc::2);

    d = dx +@0 dy +@0 dz;
    if (d <@0 minDist){
      minDist = d;
      minGroup = i;
    }
  }

  //ret = minGroup;
  return minGroup;
  //ret = forward_proc_inc(minGroup);
  //return ret;
}

fix1_t forward_proc_out() {
  fix1_t@18 prob;
  prob = 0;
  started = 0;
  for (i from 0 to 8){
    prob = prob +@18 s[i];
  }
  return prob;
}

void swap_shift(int n){
  for (i from 0 to 8){
    s[i] = f[i] <<@25 n;
  }
}

int input(fix9_t::3 acc){
  return forward_proc_inc(derive_group(acc));
}


//fix9_t::3@(12,12,12) dir_filter_ref;
fix9_t@9 filter_ref_x;
fix9_t@9 filter_ref_y;
fix9_t@9 filter_ref_z;

int@13 filter(fix9_t@11 x_in, fix9_t@11 y_in, fix9_t@11 z_in){

  // node 5
  fix9_t@10 abs;
  abs = x_in **2@11 +@11 y_in**2@11 +@11 z_in**2@11;

  // node 6
  int@10 ret2;

  ret2 = 0;
  if (abs >@10 1.1){
    ret2 = 1;
  }
  if (abs <@10 0.9){
    ret2 = 1;
  }

  // node @12

  fix9_t@12 x;
  fix9_t@12 y;
  fix9_t@12 z;

  x = x_in;
  y = y_in;
  z = z_in;


  int@12 ret;
  ret = ret2;
  //fix9_t idle_sensitivity = 0.1;//0.3;

  //fix9_t@12 def_sensitivity;
  //def_sensitivity = 0.4;//0.5;

  if (ret){
    ret = 0;
    if (x <@9 filter_ref_x -@9 0.4){
      ret = 1;
    }
    if (x >@9 filter_ref_x +@9 0.4){
      ret = 1;
    }
    if (y <@9 filter_ref_y -@9 0.4){
      ret = 1;
    }
    if (y >@9 filter_ref_y +@9 0.4){
      ret = 1;
    }
    if (z <@9 filter_ref_z -@9 0.4){
      ret = 1;
    }
    if (z >@9 filter_ref_z +@9 0.4){
      ret = 1;
    }
  }

  // node 6
  if (ret){
    filter_ref_x = x;
    filter_ref_y = y;
    filter_ref_z = z;
  }

  return ret;
}

fix9_t::3@({[0:7]=13},{[0:7]=13},{[0:7]=13}) acc_data[7] = {
(-0.01,0.11,1.11),
(0.00,0.07,1.00),
(0.04,-0.48,1.08),
(-0.18,0.09,1.11),
(0,-0.37,1.05),
(-0.05,-0.36,1.01),
(0.09,0.24,1.10)
};

void main(){
  fix1_t@13 out_fix;

  int@13 ord;
  int@16 n;
  fix9_t::3@(13,13,13) acc;

  for(i from 0 to 7) {
  acc = acc_data[i];
  
  if (filter(acc::0, acc::1, acc::2) != 0){
    ord = 0;
    ord = ord |@13 input(acc);
    n = 0;
    
    while (ord >@16 0){
      n = n +@16 1;
      ord = ord <<@13 1;
    }
    if (n >@16 3){
      swap_shift(n -@16 3);
    } else {
      swap_shift(0);
    }
  }

  }

  out_fix = forward_proc_out();
}
