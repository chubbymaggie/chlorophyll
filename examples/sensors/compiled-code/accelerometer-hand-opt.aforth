( read from accelermoter at ~200Hz )

( hand optimized )
node 717
bootstream async-target
/a io org 0
: main 2390 ! ; 

node 715
/a io org 0
: 2rep ! dup 
  for 
    unext ; 
: 1while 196608 ! 2048 ! up b! @b drop 131072 ! dup dup or ! up b! @b drop 1while ; 
: 1if 
  .. if drop 1while ; then drop ; 
: osc 
  4999 for 
    196608 2rep 131072 2rep next dup dup or ! 
  29999 for 
    @ 131072 and 1if next drop ; 
: 2while dup 2/ osc dup 1 . + push drop pop 2while ; 
: main dup dup or 12900 push drop pop 2while drop ; 

node 712
/a left org 0
: main right b! @b ! right b! @b ! main ; 

node 711
/a down org 0
: main left b! @b ! left b! @b ! main ; 

node 709
/a io /p right org 0
: 1if 
  .. -if drop 2390 ! ; then drop 342 ! ; 
: act135 dup dup or @ 131072 and 1if up b! dup !b dup right b! !b drop ; 

: wait right b! @b -if act135 right b! @p .. ; .. !b ; then act135 wait ;

node 708
/a io /p down org 0
( : wait_until_high_708 @ -if drop ; then drop wait_until_high_708 ; )
: low_high 131072 !
: edge_wait_708 right b! @p .. act135@709 .. !b @b drop ;
: set_low low_low
( : high_low 2 ! wait_until_high_708 edge_wait_708 ; )
: high_low 2 ! wait_until_high_708 ;
: set_high low_high
( : high_high dup dup or ! wait_until_high_708 edge_wait_708 ;  )
: high_high dup dup or ! wait_until_high_708 ; 
: low_low 131074 ! edge_wait_708 ; 
: 2if 
  .. -if set_high ; then set_low ;
: start_out_8 low_high high_high high_low  
: out_8 dup 2* push drop pop 
  7 for 
    2* 2if next set_high drop ; 

: in_8 dup dup or
  7 for 
    2* set_high @ 2 and or next set_low 2/ ; 
: read_16 in_8 2* 2* 2* 2* 2* 2* 2* 2* in_8 or ; 
: act134 7686 start_out_8 132608 out_8 7942 start_out_8
  read_16 read_16 read_16 set_low high_high down b! !b !b !b ;

node 611
/a right org 0
: main down b! @b ! down b! @b ! main ; 

node 610
/a left org 0
: main right b! @b ! right b! @b ! main ; 

node 609
/a right org 0
: main left b! @b ! left b! @b ! main ; 

node 607
/a right org 0
: main left b! @b ! left b! @b ! main ; 

node 606
/a left org 0
: main right b! @b ! right b! @b ! main ; 

node 605
/a right org 0
: main left b! @b ! left b! @b ! main ; 

node 604
/a left org 0
: main right b! @b ! right b! @b ! main ; 

node 603
/a right org 0
: main left b! @b ! left b! @b ! main ; 

node 602
/a left org 0
: main right b! @b ! right b! @b ! main ; 

node 601
/a right org 0
: main left b! @b ! left b! @b ! main ; 

node 600
/a right /p right org 0
 , 0
: 1if 
  .. if drop 131072 io b! !b ; then drop 196608 io b! !b ; 
: emit_1 dup 1 and 1if 
  904 for 
    unext drop ; 
: emit_8 dup dup or emit_1 
  7 for 
    dup emit_1 dup 2/ push drop pop next 1 emit_1 dup push drop pop ; 
: emit_18 dup dup or emit_8 dup dup or b! !b dup emit_8 push drop pop dup emit_8 push drop pop dup emit_8 push drop pop drop ; 
: act108 @ emit_18 ; 

node 608
/a left /p right org 0
 , 0
 , 0
 , 0
 , 0
 , 0
 , 0
: 1rep left b! @p .. act108@600 .. !b ; 
: read_accelerometer down b! @b down b! @b down b! @b ; 
: swap_bytes dup 255 and 2* 2* 2* 2* 2* 2* 2* 2* over 2/ 2/ 2/ 2/ 2/ 2/ 2/ 2/ 255 and . + push drop pop ; 
( : mbs left b! 0x3ffff !b ;)
: go ( mbs) down b! @p .. act134@708 .. !b read_accelerometer 5 b! !b 4 b! !b dup dup or b! !b 4 b! @b 1 b! !b 5 b! @b 2 b! !b 1rep dup dup or b! @b swap_bytes ! 1rep 1 b! @b swap_bytes ! 1rep 2 b! @b swap_bytes ! drop ; 
: act116 right b! @b go ; 

node 713
/a io org 0
 , 0
: 1if 
  .. if drop dup 1 . + push drop pop ; then drop dup dup or push drop pop dup dup or b! @b 1 . + dup dup or b! !b right b! @p .. act116@608 .. !b dup dup or b! @b right b! !b ; 
: 1while 2389 ! up b! dup !b 341 ! up b! dup !b dup ( 3200) 170 - 1 . + . + 1if 1while ; 
: main dup dup or dup dup or push drop pop dup dup or dup dup or b! !b 1while drop ; 

node 412
org 0
: main dup dup or drop ; 
